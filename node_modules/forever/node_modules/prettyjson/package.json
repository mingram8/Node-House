{
  "author": {
    "name": "Rafael de Oleza",
    "email": "rafeca@gmail.com",
    "url": "https://github.com/rafeca"
  },
  "name": "prettyjson",
  "description": "Package for formatting JSON data in a coloured YAML-style, perfect for CLI output",
  "version": "1.1.3",
  "homepage": "http://rafeca.com/prettyjson",
  "keywords": [
    "json",
    "cli",
    "formatting",
    "colors"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/rafeca/prettyjson.git"
  },
  "bugs": {
    "url": "https://github.com/rafeca/prettyjson/issues"
  },
  "main": "./lib/prettyjson",
  "license": "MIT",
  "scripts": {
    "test": "npm run jshint && mocha --reporter spec",
    "testwin": "node ./node_modules/mocha/bin/mocha --reporter spec",
    "jshint": "jshint lib/*.js",
    "coverage": "istanbul cover _mocha --report lcovonly -- -R spec",
    "coveralls": "npm run coverage && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "changelog": "git log $(git describe --tags --abbrev=0)..HEAD --pretty='* %s' --first-parent"
  },
  "bin": {
    "prettyjson": "./bin/prettyjson"
  },
  "dependencies": {
    "colors": "^1.1.2",
    "minimist": "^1.1.3"
  },
  "devDependencies": {
    "coveralls": "^2.11.3",
    "istanbul": "^0.3.17",
    "jshint": "^2.4.4",
    "mocha": "^2.2.5",
    "mocha-lcov-reporter": "0.0.2",
    "should": "^7.0.2"
  },
  "readme": "# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson) [![NPM version](https://badge.fury.io/js/prettyjson.png)](http://badge.fury.io/js/prettyjson) [![Coverage Status](https://coveralls.io/repos/rafeca/prettyjson/badge.png?branch=master)](https://coveralls.io/r/rafeca/prettyjson?branch=master)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output.\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install -g prettyjson\n```\n\nThis will install `prettyjson` globally, so it will be added automatically\nto your `PATH`.\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more\nconvenient way. You can use the CLI in three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass\nit as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](https://raw.github.com/rafeca/prettyjson/master/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an\nHTTP request) to the CLI to see the JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](https://raw.github.com/rafeca/prettyjson/master/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a\nprompt where you can past JSON strings and they'll be automatically displayed in a clearer way:\n\n![Example 3](https://raw.github.com/rafeca/prettyjson/master/images/example5.png)\n\n### Command line options\n\nIt's possible to customize the output through some command line options:\n\n```bash\n# Change colors\n$ prettyjson --string=red --keys=blue --dash=yellow --number=green package.json\n\n# Do not use colors\n$ prettyjson --nocolor=1 package.json\n\n# Change indentation\n$ prettyjson --indent=4 package.json\n\n# Render arrays elements in a single line\n$ prettyjson --inline-arrays=1 package.json\n```\n\n**Deprecation Notice**: The old configuration through environment variables is\ndeprecated and it will be removed in the next major version (1.0.0).\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it. You just have to include it in your script and call\nthe `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nvar options = {\n  noColor: true\n};\n\nconsole.log(prettyjson.render(data, options));\n```\n\nAnd will output:\n\n![Example 4](https://raw.github.com/rafeca/prettyjson/master/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow',\n  dashColor: 'magenta',\n  stringColor: 'white'\n}));\n```\n\nWill output something like:\n\n![Example 5](https://raw.github.com/rafeca/prettyjson/master/images/example2.png)\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo,\ninstalling the development dependencies:\n\n```bash\n$ npm install\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nOn windows, you can run the tests with:\n\n```cmd\nC:\\git\\prettyjson> npm run-script testwin\n```\n",
  "readmeFilename": "README.md",
  "_id": "prettyjson@1.1.3",
  "dist": {
    "shasum": "8e07c25de502b6f2dfda59ba1f2953971ba20768"
  },
  "_from": "prettyjson@^1.1.2",
  "_resolved": "https://registry.npmjs.org/prettyjson/-/prettyjson-1.1.3.tgz"
}
